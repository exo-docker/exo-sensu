version: '2'
services:
  web:
    image: nginx:1.8
    restart: on-failure:10
    mem_limit: 100m
    ports:
      - "80:80"
      - "81:81"
      - "443:443"
    volumes:
      - ./conf/nginx.conf:/etc/nginx/nginx.conf:ro
      # - <%= scope['s_hosting::config_dir'] %>/certs/certificate.pem:/etc/nginx/certificate.pem:ro
      # - <%= scope['s_hosting::config_dir'] %>/certs/certificate.key:/etc/nginx/certificate.key:ro
    links:
      - uchiwa
      - cadvisor
  uchiwa:
    image: uchiwa/uchiwa:latest
    restart: on-failure:10
    mem_limit: 100m
    volumes:
      - ./conf/uchiwa.json:/config/config.json:ro
    links:
      - sensu-api
  sensu-server:
    build:
      context: .
    command: server
    mem_limit: 100m
    volumes:
      - ./conf/check-cpu.json:/etc/sensu/conf.d/check-cpu.json
      - ./conf/check-redis-ping.json:/etc/sensu/conf.d/check-redis-ping.json
      - ./conf/check-redis-memory-percentage.json:/etc/sensu/conf.d/check-redis-memory-percentage.json
      - ./conf/metrics-docker.json:/etc/sensu/conf.d/metrics-docker.json
    links:
      - sensu-api
      - redis
      # - rabbitmq
    depends_on:
      - sensu-api
      - redis
      # - rabbitmq
  sensu-api:
    build:
      context: .
    command: api
    mem_limit: 100m
    privileged: false
    links:
      - redis
      # - rabbitmq
    depends_on:
      - redis
      # - rabbitmq
  sensu-client:
    build:
      context: .
    command: client
    mem_limit: 100m
    privileged: true
    volumes:
      - ./plugins/load-docker-metrics.sh:/etc/sensu/plugins/load-docker-metrics.sh
      - /var/run/docker.sock:/var/run/docker.sock
    links:
      - redis
      # - rabbitmq
    depends_on:
      - redis
      # - rabbitmq
  redis:
    image: redis:3.0
    restart: always
    mem_limit: 300m
  # rabbitmq:
  #   image: rabbitmq:3.6
  cadvisor:
    image: google/cadvisor:latest
    restart: on-failure:10
    mem_limit: 100m
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro


# volumes:
#   plf_chat_test:
#     external: true
